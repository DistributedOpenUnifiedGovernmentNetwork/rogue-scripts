#!/bin/bash
set -e

#include settings
source settings

pushd .;

printf "\n\n\t Installing GeoNode dependencies...\n\n";
./install-apt-dependencies;

printf "\n\n\t Creating virtualenv...\n\n";
virtualenv $VIRTUAL_ENV;

printf "\n\n\t Activating virtualenv...\n\n";
cd $VIRTUAL_ENV;
source bin/activate;

# Pull down repos

printf "\n\n\t Pulling down $GSCONFIG_REPO_URL -b $GSCONFIG_BRANCH...\n\n";
git clone $GSCONFIG_REPO_URL -b $GSCONFIG_BRANCH;

printf "\n\n\t Pulling down $DOWNSTREAM_PROJECT_URL -b $DOWNSTREAM_PROJECT_BRANCH...\n\n";
git clone $DOWNSTREAM_PROJECT_URL -b $DOWNSTREAM_PROJECT_BRANCH;

# Install GeoNode
printf "\n\n\t Installing geonode dependencies: $GEONODE_DEPENDENCIES...\n\n";
pip install $GEONODE_DEPENDENCIES;

printf "\n\n\t Installing geonode...\n\n";
pip install -e git+$GEONODE_REPO_URL@$GEONODE_BRANCH#egg=geonode

printf "\n\n\t Installing $DOWNSTREAM_PROJECT_NAME...\n\n";
pip install -e $DOWNSTREAM_PROJECT_NAME;

printf "\n\n\t Installing gsconfig.py...\n\n";
pip install -e gsconfig.py;

printf "\n\n\t Setting up GeoNode DB Connections...\n\n";
SETTINGS_PATH=$VIRTUAL_ENV/$DOWNSTREAM_PROJECT_NAME/$DOWNSTREAM_PROJECT_NAME
sed -i 's|<APPLICATION_DB_NAME>|'"$APPLICATION_DB_NAME"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<APPLICATION_USER_NAME>|'"$APPLICATION_USER_NAME"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<APPLICATION_USER_PASSWORD>|'"$APPLICATION_USER_PASSWORD"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<APPLICATION_DB_HOST>|'"$APPLICATION_DB_HOST"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<APPLICATION_DB_PORT>|'"$APPLICATION_DB_PORT"'|' $SETTINGS_PATH/local_settings.py;

sed -i 's|<DB_DATASTORE_DATABASE>|'"$DB_DATASTORE_DATABASE"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<DB_DATASTORE_USER>|'"$DB_DATASTORE_USER"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<DB_DATASTORE_PASSWORD>|'"$DB_DATASTORE_PASSWORD"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<DB_DATASTORE_HOST>|'"$DB_DATASTORE_HOST"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<DB_DATASTORE_PORT>|'"$DB_DATASTORE_PORT"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<DB_DATASTORE_TYPE>|'"$DB_DATASTORE_TYPE"'|' $SETTINGS_PATH/local_settings.py;
sed -i 's|<DB_DATASTORE_NAME>|'"$DB_DATASTORE_NAME"'|' $SETTINGS_PATH/local_settings.py;

printf "\n\n\t Setting up the downstream project...\n\n";
cd $VIRTUAL_ENV/$DOWNSTREAM_PROJECT_NAME;
echo yes | paver reset;

printf "\n\n\t Setting up the static files...\n\n;";
cd $VIRTUAL_ENV/$DOWNSTREAM_PROJECT_NAME;
echo yes | python manage.py collectstatic;
#chmod 755 -R $STATIC_DIR;

printf "\n\n\t Setting up permissions...\n\n";
chmod 755 -R $VIRTUAL_ENV;

printf "\n\n\t Setting up geonode geogit_repository fix...\n\n";
sed -i 's|geogit_repository=|'"geogit_repository='/data/geogit/' + "'|' $VIRTUAL_ENV/src/geonode/geonode/upload/utils.py;

printf "\n\n\t Set up directory for the geogit repository...\n\n";
mkdir -p /data/geogit;
chmod 755 /data /data/geogit;

printf "\n\n DEV_MODE=$DEV_MODE\n\n";
if [ $DEV_MODE == True ]
then
	printf "\n\n\t Modifying pavement.py so no conflict with tomcat7...\n\n";
	sed -i "s|'start_geoserver',|#'start_geoserver',|" pavement.py;

	printf "\n\n\t Starting GeoNode via paver...\n\n";
#	paver start;
else
	printf "\n\n\t Syncing the postgis db...\n\n";
	cd $VIRTUAL_ENV/$DOWNSTREAM_PROJECT_NAME;
	paver sync;

	printf "\n\n\t Starting GeoNode via uwsgi...\n\n";
	./start_geonode.sh;
fi

printf "\n\n UPDATE_GEOSERVER_WAR=$UPDATE_GEOSERVER_WAR\n\n";
popd;
if [ $UPDATE_GEOSERVER_WAR == True ]
then
	./setup-nginx-tomcat7;	
else
	./setup-nginx;
fi


printf "\n\n\t GeoNode setup complete.\n\n";
printf "\n\n\t Please run the following command:\n";
printf "\n\n\t sudo ./setup-nginx-conf\n\n";
